#*******************************************************************************
# ALMA - Atacama Large Millimeter Array
# Copyright (c) ESO - European Southern Observatory, 2013
# (in the framework of the ALMA collaboration).
# All rights reserved.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
#*******************************************************************************
#
# "@(#) $Id: common 250369 2017-10-12 14:44:36Z psivera $"
#
# common settings and functions
#

function getSVNRepository () {
  # software repository (default setting for ESO HQ)
  echo "https://alma-svn.hq.eso.org/p2"
}

function getEnvLocation () {
  ENV_LOCATION="de"

  DOMAIN=$(nslookup localhost | grep -o -P '(?<=Name:).*')
  if [[ $DOMAIN = *"eso"* ]];
    then ENV_LOCATION="de";
  elif [[ $DOMAIN = *"cl"* ]];
      then ENV_LOCATION="cl";
  fi

  echo $ENV_LOCATION
}

function getSubmissionService () {
  # for internal test (default setting for ESO HQ)
  #echo "http://ite2.hq.eso.org:8180"
  #echo "http://test-obops2.hq.eso.org:8180"

  DEFAULT_SS=
  DOMAIN=$(nslookup localhost | grep -o -P '(?<=Name:).*')
#  echo "DOMAIN: " $DOMAIN

  if [[ $DOMAIN = *"eso"* ]];
    then DEFAULT_SS="http://test-obops2.hq.eso.org:8180";
  elif [[ $DOMAIN = *"cl"* ]];
      then DEFAULT_SS="<TBD chile submission service>";
  else DEFAULT_SS="http://test-obops2.hq.eso.org:8180";
  fi

  echo $DEFAULT_SS;
}

function getQFTestVersion () {
  echo "qftest-4.2.0"
  #echo "qftest-4.0.11"
}

function getQFTestBase () {
  DE_QFTBASE="/software/qftest"
  CL_QFTBASE="/opt/qftest"

  ENV_LOCATION=$(getEnvLocation)
  if [[ $ENV_LOCATION = "cl" ]];
    then echo $CL_QFTBASE;
  else echo $DE_QFTBASE;
  fi
}

function getSubmissionServiceOwner () {
  echo "root"
}

function getServiceHostName () {
  SUBMISSION_SERVICE="${1}"
  echo "${SUBMISSION_SERVICE}" | sed -e 's#^[a-zA-Z]*://##' -e 's#:[0-9]*$##'
}

function checkRemoteLogin () {
  HOST="${1}"
  USER="${2}"

  TEST=$(ssh -o "BatchMode=yes" "${USER}@${HOST}" 'echo ZZYZX' | grep -F 'ZZYZX')
  if [[ -n "${TEST}" ]]
  then
    RESULT=0
  else
    RESULT=1
  fi

  return ${RESULT}
}

function getTelescopeTypes () {
  #echo "Cycle2 CSVALMA ESALMA"
  echo "Cycle2 Cycle3 Cycle4 Cycle5 Cycle6 CSVALMA"
}

function getTimeStamp () {
  date +'%Y%m%d_%H%M%S'
}

function getNiceTimeStamp () {
  date +'%Y-%m-%d %H:%M:%S'
}

function getDate () {
  date +'%Y-%m-%d'
}

function getSystemTime () {
  TIME=$(date +"%s")
  if [[ -z "${TIME}" ]]
  then
    TIME=0   # temporary fix for MS Windows/MobaXterm
  fi
  echo ${TIME}
}

function getTimeDiff () {
  STARTTIME=${1}
  ENDTIME=${2}
  DIFF=$(((${ENDTIME} - ${STARTTIME}) / 60))
  HOURS=$((${DIFF} / 60))
  MINS=$((${DIFF} % 60))
  if [[ ${MINS} -lt 10 ]]
  then
    MINS="0${MINS}"
  fi
  echo "${HOURS}:${MINS}"
}

# directory for building the ALMA-OT (approx. 7 GB required)
function getStageDir () {
  RETVAL=1
  HOSTNAME=$(hostname | cut -d. -f1)

  case "${HOSTNAME}" in
    pc014597 | ite2)
      STAGE="/diska/introot/${USER}"
      RETVAL=0
      ;;
    *)
      echo "ERROR: No STAGE directory defined for host '${HOSTNAME}'." >&2
  esac

  echo "${STAGE}"
  return ${RETVAL}
}
